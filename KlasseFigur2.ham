/*class*/class KlasseFigur2 extends Spielfigur
{
  
  int schritte = 0; 
 
  void wegZumLoch (int würfel)
  {
      
  
    while (würfel > 0) 
    { 
      switch (schritte){
        case 1 : stepVor (); break;
        case 2 : stepVor (); break;
        case 3 : stepVor (); break;
        case 4 : stepVorLinksUm (); break;
        case 5 : stepVor (); break;
        case 6 : stepVor (); break;
        case 7 : stepVor (); break;
        case 8 : stepVorRechtsUm (); break;
        case 9 : stepVor (); break;
        case 10 : stepVor (); break;
        case 11 : stepVor (); break;
        case 12 : stepVorRechtsUm (); break;
        case 13 : stepVor (); break;
        case 14 : stepVor (); break;
        case 15 : stepVor (); break;
        case 16 : stepVorLinksUm (); break;
        case 17 : stepVor (); break;
        case 18 : stepVor (); break;
        case 19 : stepVor (); break;
        case 20 : stepVorRechtsUm (); break;
        case 21 : stepVor (); break;
        case 22 : stepVor (); break;
        case 23 : stepVor (); break;
        case 24 : stepVorRechtsUm (); break;
        case 25 : stepVor (); break;
        case 26 : stepVor (); break;
        case 27 : stepVor (); break;
        case 28 : stepVorLinksUm (); break;
        case 29 : stepVor (); break;
        case 30 : stepVor (); break;
        case 31 : stepVor (); break;
        case 32 : stepVorRechtsUm (); break;
        case 33 : stepVor (); break;
        case 34 : stepVor (); break;
        case 35 : stepVor (); break;
        case 36 : stepVorRechtsUm (); break;
        case 37 : stepVor (); break;
        case 38 : stepVor (); break;
        case 39 : stepVor (); break;
        case 40 : stepVorLinksUm (); break;
        case 41 : stepVor (); break;
        case 42 : stepVor (); break;
        case 43 : stepVor (); break;
        case 44 : stepVorRechtsUm (); break;
        case 45 : stepVor (); break;
        case 46 : stepVorRechtsUm (); break;
        // Steps bis zum loch 
        case 47 : vorInsLoch (); break;
        case 48 : vorInsLoch (); break;
        case 49 : vorInsLoch (); break;
        case 50 : vorInsLoch (); break; 
        default: break; 
        }
        // steps ins loch 
      würfel--;
      schritte++;  
      
    }
 //   if ( schritte==3 ||schritte==15||schritte==27 ||schritte==39)
 //   {
 //     // sonderfeld Aktion 
 //   } 
 //  sonderfeld muss schritte +1 hoch zählen global damit runboyrun stimmt 
 } 
      
      
  Void wegZumHaus (int schritte)
  {     
          
      while (schritte > 46) 
    { 
      switch (schritte){
      
        case 1 : stepVor (); break;
        case 2 : stepVor (); break;
        case 3 : stepVor (); break;
        case 4 : stepVorLinksUm (); break;
        case 5 : stepVor (); break;
        case 6 : stepVor (); break;
        case 7 : stepVor (); break;
        case 8 : stepVorRechtsUm (); break;
        case 9 : stepVor (); break;
        case 10 : stepVor (); break;
        case 11 : stepVor (); break;
        case 12 : stepVorRechtsUm (); break;
        case 13 : stepVor (); break;
        case 14 : stepVor (); break;
        case 15 : stepVor (); break;
        case 16 : stepVorLinksUm (); break;
        case 17 : stepVor (); break;
        case 18 : stepVor (); break;
        case 19 : stepVor (); break;
        case 20 : stepVorRechtsUm (); break;
        case 21 : stepVor (); break;
        case 22 : stepVor (); break;
        case 23 : stepVor (); break;
        case 24 : stepVorRechtsUm (); break;
        case 25 : stepVor (); break;
        case 26 : stepVor (); break;
        case 27 : stepVor (); break;
        case 28 : stepVorLinksUm (); break;
        case 29 : stepVor (); break;
        case 30 : stepVor (); break;
        case 31 : stepVor (); break;
        case 32 : stepVorRechtsUm (); break;
        case 33 : stepVor (); break;
        case 34 : stepVor (); break;
        case 35 : stepVor (); break;
        case 36 : stepVorRechtsUm (); break;
        case 37 : stepVor (); break;
        case 38 : stepVor (); break;
        case 39 : stepVor (); break;
        case 40 : stepVorLinksUm (); break;
        case 41 : stepVor (); break;
        case 42 : stepVor (); break;
        case 43 : stepVor (); break;
        case 44 : stepVorRechtsUm (); break;
        case 45 : stepVor (); break;
        case 46 : stepVor (); break;
         
        default: break; 
        } 
          
      schritte --;
      }
      
    // ab hier interaktion um wieder in das Haus zu gehen nur für Figur 2
    vor ();
    vor ();
    vor ();
    vor ();
    vor ();
    kehrt ();
      
  }   
      
      
         
      
      
  void stepVor ()
  { 
    vor ();    
  }

  void stepVorLinksUm ()
  {
    vor ();
    linksUm ();
  }
  
  void stepVorRechtsUm ()
  {
    vor ();
    rechtsUm ();
  }
  
  void vorInsLoch ()
  {
    if (vornFrei ())
    {
      vor ();
      if (kornDa())
      {
        nimm ();
      }
      else 
      {
        kehrt ();
        vor ();
        kehrt ();
      }  
    }
  }
  
  // Verbesserung wäre noch schritte auf null zu setzen wenn der Hamster nicht mehr nach vorne gehen kann bei     
} 